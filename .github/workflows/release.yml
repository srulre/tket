name: Release

on:
  release:
    types:
      - created
      - edited
  push:
    branches:
      - 'wheel/**'
      - test-validatepypi

jobs:
  build_Linux_wheels:
    name: Build manylinux
    runs-on: ubuntu-20.04
    env:
      PY_VERS: cp38-cp38 cp39-cp39 cp310-cp310
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up container
      run: |
        docker create --name linux_build -i -v /:/host quay.io/pypa/manylinux2014_x86_64:latest /bin/bash
        docker cp . linux_build:/tket/
    - name: Run build
      run: |
        docker start linux_build
        docker exec -e PY_VERS="${PY_VERS}" linux_build /bin/bash -c "/tket/.github/workflows/linuxbuildwheel"
        mkdir wheelhouse
        docker cp linux_build:/tket/pytket/audited/. wheelhouse/
        docker rm --force -v linux_build
    - uses: actions/upload-artifact@v3
      with:
        name: Linux_wheels
        path: wheelhouse/

  build_macos_wheels:
    name: Build macos wheels
    runs-on: macos-11
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get current time
      uses: srfrnk/current-time@v1.1.0
      id: current_time
      with:
        format: YYYYMMDDHHmmss
    - name: Cache conan data
      uses: actions/cache@v3
      with:
        path: ~/.conan
        key: ${{ runner.os }}-tket-conan-${{ steps.current_time.outputs.formattedTime }}
        restore-keys: |
          ${{ runner.os }}-tket-conan-
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Build tket C++
      run: |
        pip install conan
        conan profile new tket --detect --force
        conan profile update options.tket:shared=True tket
        conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan --force
        conan install --profile=tket boost/1.79.0@ --build=missing
        conan create --profile=tket recipes/tket
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Build wheel (3.8)
      run: .github/workflows/build_macos_wheel
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Build wheel (3.9)
      run: .github/workflows/build_macos_wheel
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Build wheel (3.10)
      run: .github/workflows/build_macos_wheel
    - uses: actions/upload-artifact@v3
      with:
        name: MacOS_wheels
        path: wheelhouse/

  build_macos_M1_wheels:
    name: Build macos (M1) wheels
    runs-on: [self-hosted, macos, M1]
    env:
      CONAN_REVISIONS_ENABLED: 1
    defaults:
      run:
        shell: "/usr/bin/arch -arch arm64e /bin/bash {0}"
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Build wheels
      run: |
        eval "$(pyenv init -)"
        pyenv shell tket-3.8
        conan profile new tket --detect --force
        conan profile update options.tket:shared=True tket
        conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan --force
        conan install --profile=tket boost/1.79.0@ --build=missing
        conan create --profile=tket recipes/tket
        conan create --profile=tket recipes/pybind11
        .github/workflows/build_macos_m1_wheel
        pyenv shell tket-3.9
        .github/workflows/build_macos_m1_wheel
        pyenv shell tket-3.10
        .github/workflows/build_macos_m1_wheel
    - uses: actions/upload-artifact@v3
      with:
        name: MacOS_M1_wheels
        path: wheelhouse/

  build_Windows_wheels:
    name: Build Windows wheels
    runs-on: windows-2019
    env:
      CONAN_REVISIONS_ENABLED: 1
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Hash tket source
      id: hash_tket_source
      run: |
        Function Get-FolderHash
        {
            param ($folder)
            $files = dir $folder -Recurse |? { -not $_.psiscontainer }
            $allBytes = new-object System.Collections.Generic.List[byte]
            foreach ($file in $files)
            {
                $allBytes.AddRange([System.IO.File]::ReadAllBytes($file.FullName))
                $allBytes.AddRange([System.Text.Encoding]::UTF8.GetBytes($file.Name))
            }
            $hasher = [System.Security.Cryptography.MD5]::Create()
            $ret = [string]::Join("",$($hasher.ComputeHash($allBytes.ToArray()) | %{"{0:x2}" -f $_}))
            return $ret
        }
        $tket_hash = Get-FolderHash tket
        echo "::set-output name=tket_hash::${tket_hash}"
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Install conan
      run: |
        pip install conan
        conan profile new tket --detect
        conan profile update options.tket:shared=True tket
        $conan_cmd = (gcm conan).Path
        echo "CONAN_CMD=${conan_cmd}" >> $GITHUB_ENV
    - name: add remote
      run: conan remote add tket-conan https://tket.jfrog.io/artifactory/api/conan/tket-conan
    - name: Cache tket build
      id: cache-tket
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\.conan\data\tket
        key: ${{ runner.os }}-tket-tket-${{ steps.hash_tket_source.outputs.tket_hash }}-11
    - name: Build tket
      if: steps.cache-tket.outputs.cache-hit != 'true'
      run: conan create --profile=tket recipes/tket
    - name: Install pybind11
      run: conan create --profile=tket recipes/pybind11
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    - name: Build wheel (3.8)
      run: |
        cd pytket
        python -m pip install -U pip build
        python -m build --outdir "${{ github.workspace }}/wheelhouse/3.8"
    - uses: actions/upload-artifact@v3
      with:
        name: Windows_wheels
        path: wheelhouse/
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Build wheel (3.9)
      run: |
        cd pytket
        python -m pip install -U pip build twine
        python -m build --outdir "${{ github.workspace }}/wheelhouse/3.9"
        twine check "${{ github.workspace }}/wheelhouse/3.9/*"
    - uses: actions/upload-artifact@v3
      with:
        name: Windows_wheels
        path: wheelhouse/
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Build wheel (3.10)
      run: |
        cd pytket
        python -m pip install -U pip build
        python -m build --outdir "${{ github.workspace }}/wheelhouse/3.10"
    - uses: actions/upload-artifact@v3
      with:
        name: Windows_wheels
        path: wheelhouse/
